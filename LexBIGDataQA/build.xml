<?xml version="1.0" encoding="UTF-8"?>
<project name="LexEVSDataQA" basedir="." default="make_lexbigQa">

	<!-- Set environment container -->
	<property environment="env" />

	<!-- Path for perl calls on distributed system -->
	<filter token="PATH_TO_PERL" value="${env.PATH_TO_PERL}" />

	<!-- Set environment container -->
	<property environment="env" />

	<!-- Top-level directories -->
	<property name="build.dir" value="build" />
	<property name="junitclass.dir" value="build/junitclasses" />
	<property name="class.dir" value="build/classes" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="src.dir" value="src" />
	<property name="etc.dir" value="etc" />
	<property name="doc.dir" value="doc" />
	<property name="crlfPattern" value="**/*.bat" />
	<property name="lfPattern" value="**/*.txt, 
	 									 **/*.pm,
	 									 **/*.pl,
	 									 **/*.csh, 
	 									 **/*.cgi, 
	 									 **/*.sh, 
	 									 **/*.ksh,
	 									 **/*.java, 
	 									 **/*orig*,
	                                     **/*cfg*" />

	<!-- Java configuration -->
	<path id="classpath.compile">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${class.dir}" />
		<pathelement path="${junitclass.dir}" />
	</path>
	<property name="cmpclp" refid="classpath.compile" />

	<tstamp>
		<format property="curDate" pattern="yyyyMMdd" />
	</tstamp>

	<!-- Create initial Directories -->
	<target name="init" description="Initialize directory structure">
		<property name="dist.suffix" value="" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${class.dir}" />
		<mkdir dir="${junitclass.dir}" />
		<mkdir dir="${dist.dir}" />
		<delete>
			<fileset dir="." includes="**/*~" />
		</delete>
		<echo message="class path is set to ${env.CLASSPATH}" />
		<echo message="compile class path is ${cmpclp}" />
		<echo message="java home is set to ${env.JAVA_HOME}" />
	</target>

	<!-- Make Batch MRCXT Builder-->
	<target name="make_lexbigQa" description="Build LexEVS Data QA System" depends="init">
		<!-- properties -->
		<property name="dist.dir" value="dist/lexbigqa" />

		<!-- Make distribution dirs -->
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/bin" />
		<mkdir dir="${dist.dir}/data" />
		<mkdir dir="${dist.dir}/doc" />
		<mkdir dir="${dist.dir}/etc" />
		<mkdir dir="${dist.dir}/lib" />

		<!-- bin -->
		<copy todir="${dist.dir}/bin" filtering="true">
			<fileset dir="${src.dir}/counts" includes="*.pl" />
			<fileset dir="${src.dir}/rules" includes="*.pl" />
			<fileset dir="${src.dir}/util" includes="*.pl,*.csh" />
		</copy>

		<!-- doc -->
		<copy todir="${dist.dir}/doc" >
            <fileset dir="${doc.dir}" />
        </copy>

		<!-- etc-->
		<copy todir="${dist.dir}/etc">
			<fileset dir="${etc.dir}" />
		</copy>
		<!-- INSTALL.txt, README.txt -->
		<copy todir="${dist.dir}" filtering="true">
			<fileset dir="." includes="README.txt, INSTALL.txt" />
		</copy>

		<!-- lib -->
		<!-- Copy files to build in order to perform filtering -->
		<javac destdir="${class.dir}" debug="true" srcdir="${src.dir}/java">
			<classpath refid="classpath.compile" />
			<include name="**/*.java" />
		</javac>
		<jar basedir="${class.dir}" destfile="${dist.dir}/lib/lexbigQa.jar" includes="**/*.class" />
		<copy todir="${dist.dir}/lib">
			<fileset dir="${lib.dir}" includes="*.jar" excludes="lbRuntime.jar"/>
		</copy>

		<!-- Zip -->
		<fixcrlf eol="lf" srcdir="${dist.dir}" includes="${lfPattern}" eof="remove" />
		<fixcrlf eol="crlf" srcdir="${dist.dir}" includes="${crlfPattern}" eof="remove" />
		<zip destfile="dist_lexbigQa${dist.suffix}.zip">
			<zipfileset dir="${dist.dir}/bin" filemode="775" prefix="bin/" />
			<zipfileset dir="${dist.dir}" excludes="bin/*" />
			<zipfileset dir="${dist.dir}/data" prefix="data" />
		</zip>

		<!-- Cleanup -->
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
	    </target>

</project>

